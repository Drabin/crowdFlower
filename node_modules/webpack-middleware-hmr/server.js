var express = require('express');
var Server = require('socket.io');
var io, stats;

function hmrEmitter(app, compiler) {
  listen(app);

  var invalidPlugin = function() {
    if (io) {
      io.sockets.emit('invalid');
    }
  };

  compiler.plugin('compile', invalidPlugin);

  compiler.plugin('invalid', invalidPlugin);

  compiler.plugin('done', function(stats) {
    if (!io) {
      return;
    }
    sendStats(io.sockets, stats.toJson());
    stats = stats;
  });
}

function listen(app) {
  io = new Server(app);
  io.sockets.on('connection', function(socket) {
    socket.emit('hot');
    if (!stats) {
      return;
    }
    sendStats(socket, stats.toJson(), true);
  });
}

function sendStats(socket, stats, force) {
  if (
  !force && stats && (!stats.errors || stats.errors.length === 0) &&
   stats.assets &&
   stats.assets.every(function(asset) {return !asset.emitted;})
  ) {
    return socket.emit('still-ok');
  }
  socket.emit('hash', stats.hash);

  if(stats.errors.length > 0) {
    socket.emit('errors', stats.errors);
  } else if (stats.warnings.length > 0) {
    socket.emit('warnings', stats.warnings);
  } else {
    socket.emit('ok');
  }
}

module.exports = hmrEmitter;
